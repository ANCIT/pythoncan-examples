#Code Generated by TestGenx v.1.0
#ANCIT CONSULTING
#Date : Tue Apr 14 19:53:35 IST 2020
#Author : E5 571

from __future__ import print_function
import can
import time
import cantools
from pynput import keyboard
import threading

can_bus = can.interface.Bus(bustype='socketcan',channel='can0',bitrate=1000000)

def on_Message():
	while True:
		response = can_bus.recv()
		if response.arbitration_id == 0x01:
			# Message ID : 0x11
			message = can.Message(arbitration_id=0x11, data=[2,0,0,0,2,0,0,0], is_extended_id=False)
			try:
				can_bus.send(message)
				print(" 0x11 Message sent on {}".format(can_bus.channel_info))
			except can.CanError:
				print("Message NOT sent")

def on_press(key):
print("Key Event Identified")
	if key.char == 'a': # handles if key press is a
			# Message ID : 0x20
			message = can.Message(arbitration_id=0x20, data=[3,0,0,0,3,0,0,0], is_extended_id=False)
			try:
				can_bus.send(message)
				print(" 0x20 Message sent on {}".format(can_bus.channel_info))
			except can.CanError:
				print("Message NOT sent")

	if key.char == 'b': # handles if key press is b
			# Message ID : 0x30
			message = can.Message(arbitration_id=0x30, data=[4,0,0,0,4,0,0,0], is_extended_id=False)
			try:
				can_bus.send(message)
				print(" 0x30 Message sent on {}".format(can_bus.channel_info))
			except can.CanError:
				print("Message NOT sent")

	if key.char == 'c': # handles if key press is c
			# Message ID : 0x31
			message = can.Message(arbitration_id=0x31, data=[5,0,0,0,5,0,0,0], is_extended_id=False)
			try:
				can_bus.send(message)
				print(" 0x31 Message sent on {}".format(can_bus.channel_info))
			except can.CanError:
				print("Message NOT sent")


def on_Key():
	keyboard.Listener(on_press=on_press).start()

def sendMessage():
			# Message ID : 0x00
			message = can.Message(arbitration_id=0x00, data=[0,0,0,0,0,0,0,0], is_extended_id=False)
			try:
				can_bus.send(message)
				print(" 0x00 Message sent on {}".format(can_bus.channel_info))
			except can.CanError:
				print("Message NOT sent")

			# Message ID : 0x01
			message = can.Message(arbitration_id=0x01, data=[1,0,0,0,10,0,0], is_extended_id=False)
			try:
				can_bus.send(message)
				print(" 0x01 Message sent on {}".format(can_bus.channel_info))
			except can.CanError:
				print("Message NOT sent")

if __name__ == '__main__':

	sendMessage()
	on_Key()
	threading.Thread(on_Message()).start()